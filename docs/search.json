[
  {
    "objectID": "CDC_Data.html",
    "href": "CDC_Data.html",
    "title": "CDC Data",
    "section": "",
    "text": "dc_datasets &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-11/cdc_datasets.csv')\nfpi_codes &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-11/fpi_codes.csv')\nomb_codes &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-11/omb_codes.csv')\nlibrary(tidyverse)\nlibrary(ggplot2)\n\n\ndc_datasets |&gt;\n  mutate(contact_name = fct_infreq(contact_name))|&gt;\n  mutate(contact_name_other = fct_lump(contact_name, 5)) |&gt;\n  ggplot(aes(x = contact_name_other, fill = contact_name_other)) +\n  geom_bar() +\n  theme(axis.text.x = element_blank())+\n  labs(\n    title = \"Most Common Contact Name for Datasets\",\n    x = \"\",\n    y = \"Count\",\n    fill = \"Contact name\"\n  )\n\n\n\n\n\n\n\n\nCitation:\n“Files for 20250128-Cdc-Datasets.” Internet Archive, https://archive.org/download/20250128-cdc-datasets."
  },
  {
    "objectID": "Water_Insecurity.html",
    "href": "Water_Insecurity.html",
    "title": "Water Insecurity",
    "section": "",
    "text": "water_insecurity_2022 &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-01-28/water_insecurity_2022.csv')\nwater_insecurity_2023 &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-01-28/water_insecurity_2023.csv')\nlibrary(tidyverse)\nlibrary(ggplot2)\n\n\nwater_insecurity &lt;- water_insecurity_2023 |&gt;\n  head(848)|&gt;\n  mutate(\"old_percent_lacking_plumbing\" = pull(select(water_insecurity_2022, percent_lacking_plumbing))) |&gt;\n  mutate(\"2022\" = mean(old_percent_lacking_plumbing, na.rm = TRUE), \"2023\" = mean(percent_lacking_plumbing, na.rm = TRUE))|&gt;\n  head(1)|&gt;\n  pivot_longer(c(\"2022\", \"2023\"),names_to = \"yeare\", values_to = \"Average_percent_lacking_plumbing\") |&gt;\n  select(yeare, Average_percent_lacking_plumbing)\nggplot(water_insecurity, aes(x = yeare, y = Average_percent_lacking_plumbing)) +\n  geom_col() +\n  labs(\n    x = \"Year\",\n    y = \"Percent Without Plumbing across the US\",\n    title = \"(Not-so-honest) Plot of the percentage of houses without full \\nplumbing in 2022 and 2023\"\n  )\n\n\n\n\n\n\n\n\nCitation:\nElmera Azadpour and Cee Nell. Mapping Water Insecurity in R with Tidycensus. 9 Dec. 2024, https://waterdata.usgs.gov/blog/acs-maps/."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DS2 Project",
    "section": "",
    "text": "This is my website that is for Foundations of Data Science. Here is some basic information about me. I am a student that is doing Foundations of Data Science. This is something I made in my art class in Adobe Illustrator."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This site is a site with some Tidy Tuesday datasets."
  },
  {
    "objectID": "Text_analysis.html",
    "href": "Text_analysis.html",
    "title": "Text Analysis",
    "section": "",
    "text": "Show the code\n#Create dataframe from the .txt file\nLA_bus_stops &lt;- read.csv(\"stops.txt\")\nlibrary(tidyverse)\nlibrary(ggplot2)\n\n\n\n\nShow the code\n#Count the length of the stop names, and extract each separate street from each stop name\nLA_bus_stops&lt;-LA_bus_stops |&gt; \n  mutate(stop_name_length = str_length(stop_name), \n         stop_street_1 = str_extract(stop_name, \".+(?= /)\"), \n         stop_street_2 = str_extract(stop_name, \"(?&lt;= / ).+\"))|&gt;\n    select(stop_id, stop_code, stop_name, stop_street_1, stop_street_2, stop_name_length, stop_lat, stop_lon)\n\n\n\n\nShow the code\n#Make a plot of how common each stop name length is\nLA_bus_stops|&gt;\n  ggplot(aes(x = stop_name_length))+\n  geom_histogram(binwidth = 0.5)+\n  labs(\n    x = \"Amount of characters in bus stop name\",\n    y = \"Count\",\n    title = \"What is the most common length of bus stop name?\"\n  )\n\n\n\n\n\n\n\n\n\nThis graph was made by counting the number of characters in each bus stop name and then plotting the number of times each amount of characters appeared in the dataset. The most common length of a bus stop name (which is usually formatted like “Paramount / Slauson”) is around 17 characters. Very few bus stops have less than 10 characters in them.\nThis is a table of the 10 streets with the most bus stops on them:\n\n\nShow the code\n#Count how many stops there are on each street\nCommon_streets1 &lt;- LA_bus_stops |&gt;\n  group_by(stop_street_1)|&gt;\n  summarize(count1 = n())|&gt;\n  rename(stop_street = stop_street_1)\n\nCommon_streets2 &lt;- LA_bus_stops |&gt;\n  group_by(stop_street_2)|&gt;\n  summarize(count2 = n())|&gt;\n  rename(stop_street = stop_street_2)\n\nCommon_streets &lt;- \n  full_join(Common_streets1, Common_streets2, by = \"stop_street\")|&gt;\n  mutate(total_count = (count1 + count2))|&gt;\n  select(stop_street, total_count)|&gt;\n  arrange(desc(total_count))|&gt;\n  filter(!is.na(stop_street))\n  \nprint(head(Common_streets,10))\n\n\n# A tibble: 10 × 2\n   stop_street total_count\n   &lt;chr&gt;             &lt;int&gt;\n 1 Vermont             255\n 2 Sunset              244\n 3 Broadway            232\n 4 Figueroa            224\n 5 Western             209\n 6 Victory             203\n 7 Olympic             201\n 8 Slauson             200\n 9 Imperial            192\n10 Rosecrans           186\n\n\nThis table was made by separating the bus stops’ names (which are usually formatted like “Paramount / Slauson”) into the first street (Paramount) and the second street (Slauson). The first street in this naming convention is the street that the bus runs on, and the second street is the cross street. After separating and counting the number of times each street is mentioned, I added the number of times the first street (Paramount in this example) is mentioned to the times it is mentioned as a cross street to get the number of bus stops that are on the street or stop at it as a cross street. stop_street tells you the street and total_count tells you the number of bus stops on or at that street.\nThis is a table of the 10 numbered streets with the most bus stops on them:\n\n\nShow the code\n#Which are the numbered streets with the most bus stops on them?\nCommon_streets|&gt;\n  filter(str_detect(stop_street, \"\\\\d.*\"))|&gt;\n  head(10)\n\n\n# A tibble: 10 × 2\n   stop_street total_count\n   &lt;chr&gt;             &lt;int&gt;\n 1 3rd                 131\n 2 7th                 118\n 3 6th                 110\n 4 8th                 104\n 5 1st                  99\n 6 4th                  54\n 7 5th                  46\n 8 9th                  32\n 9 23rd                 30\n10 120th                28\n\n\nThis table was created in the same way as the table above and then filtered to only count the numbered streets.\nThis analysis comes from publicly-available GTFS data provided by LA Metro.\n\nData Source: https://gitlab.com/LACMTA/gtfs_bus/-/tree/weekly-updated-service\nData Authors: https://developer.metro.net/gtfs-schedule-data/"
  }
]