---
title: "Text Analysis"
description: |
  An analysis of General Transit Feed Specification bus stop data from LA Metro 
author: LA Metro
date: October 5, 2025
format:
  html:
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
execute: 
  warning: false
  message: false
---

```{r}
#Create dataframe from the .txt file
LA_bus_stops <- read.csv("stops.txt")
library(tidyverse)
library(ggplot2)
```

```{r}
#Count the length of the stop names, and extract each separate street from each stop name
LA_bus_stops<-LA_bus_stops |> 
  mutate(stop_name_length = str_length(stop_name), 
         stop_street_1 = str_extract(stop_name, ".+(?= /)"), 
         stop_street_2 = str_extract(stop_name, "(?<= / ).+"))|>
    select(stop_id, stop_code, stop_name, stop_street_1, stop_street_2, stop_name_length, stop_lat, stop_lon)
```

```{r}
#Make a plot of how common each stop name length is
LA_bus_stops|>
  ggplot(aes(x = stop_name_length))+
  geom_histogram(binwidth = 0.5)+
  labs(
    x = "Amount of characters in bus stop name",
    y = "Count",
    title = "What is the most common length of bus stop name?"
  )
```

This graph was made by counting the number of characters in each bus stop name and then plotting the number of times each amount of characters appeared in the dataset. The most common length of a bus stop name (which is usually formatted like "Paramount / Slauson") is around 17 characters. Very few bus stops have less than 10 characters in them.

This is a table of the 10 streets with the most bus stops on them:

```{r}
#Count how many stops there are on each street
Common_streets1 <- LA_bus_stops |>
  group_by(stop_street_1)|>
  summarize(count1 = n())|>
  rename(stop_street = stop_street_1)

Common_streets2 <- LA_bus_stops |>
  group_by(stop_street_2)|>
  summarize(count2 = n())|>
  rename(stop_street = stop_street_2)

Common_streets <- 
  full_join(Common_streets1, Common_streets2, by = "stop_street")|>
  mutate(total_count = (count1 + count2))|>
  select(stop_street, total_count)|>
  arrange(desc(total_count))|>
  filter(!is.na(stop_street))
  
print(head(Common_streets,10))
```

This table was made by separating the bus stops' names (which are usually formatted like "Paramount / Slauson") into the first street (Paramount) and the second street (Slauson). The first street in this naming convention is the street that the bus runs on, and the second street is the cross street. After separating and counting the number of times each street is mentioned, I added the number of times the first street (Paramount in this example) is mentioned to the times it is mentioned as a cross street to get the number of bus stops that are on the street or stop at it as a cross street. stop_street tells you the street and total_count tells you the number of bus stops on or at that street.

This is a table of the 10 numbered streets with the most bus stops on them:

```{r}
#Which are the numbered streets with the most bus stops on them?
Common_streets|>
  filter(str_detect(stop_street, "\\d.*"))|>
  head(10)
```

This table was created in the same way as the table above and then filtered to only count the numbered streets.

This analysis comes from publicly-available GTFS data provided by LA Metro.

-   Data Source: <https://gitlab.com/LACMTA/gtfs_bus/-/tree/weekly-updated-service>
-   Data Authors: <https://developer.metro.net/gtfs-schedule-data/>
